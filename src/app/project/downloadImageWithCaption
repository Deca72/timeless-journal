import html2canvas from "html2canvas";

// Font style mapping
const fontMap = {
  serif: "serif",
  "sans-serif": "sans-serif",
  cursive: "cursive",
  monospace: "monospace",
  dancing: "'Dancing Script', cursive",
  typewriter: "'Courier New', monospace",
  fancy: "'Great Vibes', cursive",
  playfair: "'Playfair Display', serif",
  merriweather: "'Merriweather', serif",
  raleway: "'Raleway', sans-serif",
  lobster: "'Lobster', cursive",
  abril: "'Abril Fatface', cursive",
  poppins: "'Poppins', sans-serif",
  roboto: "'Roboto', sans-serif",
  inconsolata: "'Inconsolata', monospace",
  zeyada: "'Zeyada', cursive",
  archivo: "'Archivo', sans-serif",
  "noto-serif": "'Noto Serif', serif",
  "noto-sans": "'Noto Sans', sans-serif",
  "source-serif": "'Source Serif Pro', serif",
  rubik: "'Rubik', sans-serif",
  "space-mono": "'Space Mono', monospace",
  amatic: "'Amatic SC', cursive",
  fjalla: "'Fjalla One', sans-serif",
  crimson: "'Crimson Text', serif",
};

const backgroundStyleMap = {
  default: "#ffffff",
  parchment: "#fef9e7",         // üü® Light parchment yellow
  retro: "#fdf6e3",
  modern: "#eeeeee",
  photojournal: "#fdfdfd",
  pastel: "#ffe4e1",
  sepia: "#f4ecd8",
  notebook: "#fef3c7",
  midnight: "#1e293b",
  cream: "#fffdd0",
  forest: "#e8f5e9",
  corkboard: "#f5deb3",
  canvas: "#f8f8f8",
  foggy: "#e0e0e0",
  sunset: "#ffe5b4",
};



export const downloadImageWithCaption = async (imageUrl, caption, imageName, fontKey, backgroundStyleKey = "") => {
  try {
    let isMobile = false;

    if (typeof window !== "undefined" && typeof navigator !== "undefined") {
      isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);
    }

    const fontFamily = fontMap[fontKey] || "'Dancing Script', cursive";

    // ‚úÖ Wait until the font is loaded
    await document.fonts.load(`16px ${fontFamily}`);
    await document.fonts.ready;

    const container = document.createElement("div");
    container.style.width = "600px";
    container.style.padding = "20px";
    container.style.backgroundColor = backgroundStyleMap[backgroundStyleKey] || "#ffffff";
    container.style.display = "flex";
    container.style.flexDirection = "column";
    container.style.alignItems = "center";
    container.style.justifyContent = "center";
    container.style.fontFamily = fontFamily;
    container.style.fontSize = "18px";
    container.style.textAlign = "center";
    container.style.color = "#000000";

    const img = new Image();
    img.crossOrigin = "anonymous";
    img.src = imageUrl;
    img.style.width = "500px";
    img.style.borderRadius = "10px";
    img.style.marginBottom = "15px";

    const text = document.createElement("p");
    text.innerText = caption;
    text.style.maxWidth = "500px";
    text.style.margin = "0";
    text.style.padding = "10px";
    text.style.backgroundColor = backgroundStyleMap[backgroundStyleKey] || "#ffffff";
    text.style.color = "#000000";
    text.style.borderRadius = "8px";
    text.style.boxShadow = "0px 4px 10px rgba(0,0,0,0.1)";
    text.style.fontFamily = fontFamily;

    container.appendChild(img);
    container.appendChild(text);

    img.onload = async () => {
      document.body.appendChild(container);

      const canvas = await html2canvas(container, { scale: 2, useCORS: true });
      document.body.removeChild(container);

      canvas.toBlob((blob) => {
        if (!blob) {
          console.error("‚ùå Failed to generate blob.");
          alert("Could not generate image.");
          return;
        }

        const blobUrl = URL.createObjectURL(blob);

        if (isMobile) {
          const newTab = window.open();
          if (newTab) {
            newTab.document.write(`
              <html>
                <head><title>Save Your Journal</title></head>
                <body style="margin:0; padding:0; text-align:center; background:white;">
                  <p style="font-family:sans-serif; font-size:16px; margin-top:20px;">
                    üì∏ Tap and hold the image below to save it
                  </p>
                  <img src="${blobUrl}" style="max-width:100%; padding:10px;" />
                </body>
              </html>
            `);
          } else {
            alert("Popup blocked. Please allow popups to save your image.");
          }
        } else {
          const link = document.createElement("a");
          link.href = blobUrl;
          link.download = `${imageName}-journal.png`;
          document.body.appendChild(link);
          link.click();
          document.body.removeChild(link);
        }
      });
    };

    img.onerror = () => {
      console.error("‚ùå Image failed to load:", imageUrl);
      alert("Failed to load image. Check if the URL is correct.");
    };
  } catch (error) {
    console.error("‚ùå Error downloading image:", error);
    alert("Failed to download image. Try again.");
  }
};
